# 2.1 Выяснить тип результата выражений:

15 * 3
15 / 3
15 // 2
15 ** 2


#2.2 Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже.


lst = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
for i in range(len(lst)):
    if lst[i].isdigit():
        lst[i] = lst[i].zfill(2)
    elif lst[i].startswith('+'):
        lst[i] = lst[i].zfill(3)

k = 0
while k < len(lst):
    if lst[k].isdigit() or lst[k].startswith('+'):
        lst.insert(k, '"')
        lst.insert(k + 2, '"')
        k += 1
    k += 1
print(lst)
print(' '.join(lst))


# 2.3 Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
#Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!' Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?


work = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
for worker in work:
    print('Привет, {}!'.format(worker.split()[-1].capitalize()))



# 2.4 Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
#
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
# # Задачи со * предназначены для продвинутых учеников, которым мало сделать обычное задание.


prices = [57.8, 46.51, 97, 54.9, 57.1, 87.65, 10.98, 49.32, 72.47, 49.18, 35.41]
for r in prices:
    rub = int(r)
    kop = int((round(r - rub, 2)) * 100)
    if kop == 0:
        kop = str(kop).zfill(2)
    print('{} руб {} коп'.format(rub, kop))

print(id(prices))
prices.sort(reverse=True)
print(prices)
print(id(prices))
print(prices[:5:-1])
